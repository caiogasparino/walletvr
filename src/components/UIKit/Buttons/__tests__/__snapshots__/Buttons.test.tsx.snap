// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button Component calls onPress prop when clicked 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "backgroundColor": "#007AFF",
      "borderBottomLeftRadius": 12,
      "borderBottomRightRadius": 12,
      "borderTopLeftRadius": 12,
      "borderTopRightRadius": 12,
      "height": undefined,
      "justifyContent": "center",
      "marginBottom": 0,
      "marginTop": 0,
      "opacity": 1,
      "paddingHorizontal": 20,
      "paddingVertical": 10,
      "width": undefined,
    }
  }
>
  <Text
    style={
      {
        "color": "#fff",
        "fontSize": 16,
        "textAlign": "center",
      }
    }
  >
    <Text
      style={
        {
          "color": undefined,
          "fontFamily": "PTSansCaption-Regular",
          "fontSize": undefined,
          "fontWeight": undefined,
          "lineHeight": 22,
        }
      }
    >
      Click me
    </Text>
  </Text>
</View>
`;

exports[`Button Component renders with disabled attribute when disabled is true 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "backgroundColor": "#007AFF",
      "borderBottomLeftRadius": 12,
      "borderBottomRightRadius": 12,
      "borderTopLeftRadius": 12,
      "borderTopRightRadius": 12,
      "height": undefined,
      "justifyContent": "center",
      "marginBottom": 0,
      "marginTop": 0,
      "opacity": 1,
      "paddingHorizontal": 20,
      "paddingVertical": 10,
      "width": undefined,
    }
  }
  testID="myButton"
>
  <Text
    style={
      {
        "color": "#fff",
        "fontSize": 16,
        "textAlign": "center",
      }
    }
  >
    <Text
      style={
        {
          "color": undefined,
          "fontFamily": "PTSansCaption-Regular",
          "fontSize": undefined,
          "fontWeight": undefined,
          "lineHeight": 22,
        }
      }
    >
      Click me
    </Text>
  </Text>
</View>
`;

exports[`Button Component renders with the correct label 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "backgroundColor": "#007AFF",
      "borderBottomLeftRadius": 12,
      "borderBottomRightRadius": 12,
      "borderTopLeftRadius": 12,
      "borderTopRightRadius": 12,
      "height": undefined,
      "justifyContent": "center",
      "marginBottom": 0,
      "marginTop": 0,
      "opacity": 1,
      "paddingHorizontal": 20,
      "paddingVertical": 10,
      "width": undefined,
    }
  }
>
  <Text
    style={
      {
        "color": "#fff",
        "fontSize": 16,
        "textAlign": "center",
      }
    }
  >
    <Text
      style={
        {
          "color": undefined,
          "fontFamily": "PTSansCaption-Regular",
          "fontSize": undefined,
          "fontWeight": undefined,
          "lineHeight": 22,
        }
      }
    >
      Click me
    </Text>
  </Text>
</View>
`;
